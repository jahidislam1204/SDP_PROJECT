

name: Push & Deploy to ECS

on:
  push:
    branches:
      - master

env:
  AWS_REGION: ap-southeast-1
  ECR_REPOSITORY: public.ecr.aws/c0t2e3x3/sdp_project
  IMAGE_TAG: latest
  IMAGE_URI: public.ecr.aws/c0t2e3x3/sdp_project
  ECS_CLUSTER: sdpProject             
  ECS_SERVICE: FH-task-defination-service-gtqbeur3     
  TASK_DEF_FILE: task-def.json        

jobs:
  push_image:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.4'

      - name: Clean Flutter project
        run: flutter clean && rm -rf android/.gradle

      - name: Install dependencies
        run: flutter pub get

      - name: Analyze code
        run: flutter analyze || true

      - name: Run tests
        run: flutter test || true

      - name: Build Web
        run: flutter build web --release

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR (public)
        run: |
          aws ecr-public get-login-password --region us-east-1 \
          | docker login --username AWS --password-stdin public.ecr.aws

      - name: Build Docker image
        run: docker build -t $IMAGE_URI .

      - name: Push Docker image
        run: docker push $IMAGE_URI

      - name: Save image URI as artifact
        run: echo "$IMAGE_URI" > image_uri.txt

      - name: Upload image artifact
        uses: actions/upload-artifact@v4
        with:
          name: image-uri
          path: image_uri.txt

  deploy_to_ecs:
    name: Deploy to ECS
    runs-on: ubuntu-latest
    needs: push_image

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Download image artifact
        uses: actions/download-artifact@v4
        with:
          name: image-uri
          path: .

      - name: Read image URI from file
        id: read-image
        run: |
          IMAGE_URI=$(cat image_uri.txt)
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Replace image in task definition
        run: |
          # Update the first container's image (sdp_project)
          jq --arg IMAGE "$IMAGE_URI" '.containerDefinitions[0].image = $IMAGE' $TASK_DEF_FILE > new-task-def.json

      - name: Register new ECS task definition
        id: register-task-def
        run: |
          TASK_DEF_ARN=$(aws ecs register-task-definition \
            --cli-input-json file://new-task-def.json \
            --query 'taskDefinition.taskDefinitionArn' \
            --output text)
          echo "TASK_DEF_ARN=$TASK_DEF_ARN" >> $GITHUB_ENV

      - name: Update ECS service with new task definition
        run: |
          aws ecs update-service \
            --cluster $ECS_CLUSTER \
            --service $ECS_SERVICE \
            --task-definition $TASK_DEF_ARN
